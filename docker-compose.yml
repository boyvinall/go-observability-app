# some parts originally taken from https://github.com/grafana/tempo/tree/main/example/docker-compose/local

version: "3"

volumes:
  tempo-data:
  loki-data:
  prometheus-data:

services:

  promtail:
    image: grafana/promtail:2.8.7
    container_name: promtail
    command: [ "-config.file=/etc/promtail.yml" ]
    volumes:
      - ./docker/promtail.yml:/etc/promtail.yml
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - "9080:9080"  # promtail
    labels:
      app: infra

  loki:
    container_name: loki
    image: grafana/loki:2.8.7
    # image: grafana/loki:main
    command: [ "-config.file=/etc/loki/loki.yml" ]
    volumes:
      - ./docker/loki.yml:/etc/loki/loki.yml
      - loki-data:/loki # loki user is unable to create top-level directory like /data
    # ports:
    #   - "3100:3100"  # loki
    #   - "9095:9095"  # loki grpc
    #   - "9096:9096"  # loki http
    labels:
      app: infra

  tempo:
    container_name: tempo
    image: grafana/tempo:2.3.1
    # image: grafana/tempo:latest
    command: [ "-config.file=/etc/tempo.yml" ]
    volumes:
      - ./docker/tempo.yml:/etc/tempo.yml
      - tempo-data:/tmp/data
    # ports:
    #   - "3200:3200"  # tempo
    #   - "9095:9095"  # tempo grpc
    #   - "4317:4317"  # otlp grpc
    #   - "4318:4318"  # otlp http
    labels:
      app: infra

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.48.1
    command:
      - --config.file=/etc/prometheus.yml
      - --web.enable-remote-write-receiver  # so tempo can write generated metrics
      - --enable-feature=exemplar-storage
      - --storage.tsdb.path=/tmp/data
    volumes:
      - ./docker/prometheus.yml:/etc/prometheus.yml
      # - prometheus-data:/tmp/data # prometheus user is unable to create top-level directory like /data
    ports:
      - "9090:9090" # prometheus
    labels:
      app: infra

  grafana:
    container_name: grafana
    image: grafana/grafana:10.2.3
    # image: grafana/grafana:main
    volumes:
      - ./docker/grafana-datasources.yml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceQLStreaming metricsSummary traceToMetrics correlations # https://grafana.com/docs/grafana/latest/setup-grafana/configure-grafana/feature-toggles/
    ports:
      - "3000:3000" # grafana
    labels:
      app: infra

  boomer:
    container_name: boomer
    image: boomer
    platform: linux/amd64
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080" # GRPC
      - "2223:2223" #Â metrics
    labels:
      app: boomer
